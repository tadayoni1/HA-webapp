Description:
    This templates deploys a high-avilability web app in AWS

Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String
  VpcCIDR:
    Description: IP range for the VPC
    Type: String
  EnableDnsHostnames:
    Type: String
  PublicSubnet1CIDR:
    Description: IP range for the Subnet
    Type: String
  PublicSubnet2CIDR:
    Description: IP range for the Subnet
    Type: String
  PrivateSubnet1CIDR:
    Description: IP range for the Subnet
    Type: String
  PrivateSubnet2CIDR:
    Description: IP range for the Subnet
    Type: String

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: !Ref EnableDnsHostnames
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
          
  myVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway

  myPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CirderBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  myPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CirderBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)


  myPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CirderBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  myPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CirderBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  myNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties: 
      Domain: vpc

  myNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
      Domain: vpc

  myNatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt myNatGateway1EIP.AllocationId
      SubnetId: !Ref myPublicSubnet1

  myNatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myNatGateway2EIP.AllocationId
      SubnetId: !Ref myPublicSubnet2