Description:
    This templates deploys network infrastructure for a high-avilability web app in AWS

Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String
  VpcCIDR:
    Description: IP range for the VPC
    Type: String
  EnableDnsHostnames:
    Type: String
  PublicSubnet1CIDR:
    Description: IP range for the Subnet
    Type: String
  PublicSubnet2CIDR:
    Description: IP range for the Subnet
    Type: String
  PrivateSubnet1CIDR:
    Description: IP range for the Subnet
    Type: String
  PrivateSubnet2CIDR:
    Description: IP range for the Subnet
    Type: String

Resources:

# VPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: !Ref EnableDnsHostnames
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
#Internet Gateway
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
          
  myInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway

# Subnets
  myPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  myPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  myPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  myPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

# NatGateway
  myNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties: 
      Domain: vpc

  myNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
      Domain: vpc

  myNatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt myNatGateway1EIP.AllocationId
      SubnetId: !Ref myPublicSubnet1

  myNatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myNatGateway2EIP.AllocationId
      SubnetId: !Ref myPublicSubnet2

# Route Tables
## Public Route Table
  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref myVPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Routes

  myDefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: myInternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref myPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

  myPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicRouteTable
      SubnetId: !Ref myPublicSubnet1

  myPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicRouteTable
      SubnetId: !Ref myPublicSubnet2

## Private Route Table1
  myPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref myVPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  myDefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myPrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway1

  myPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPrivateRouteTable1
      SubnetId: !Ref myPrivateSubnet1

## Private Route Table2
  myPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref myVPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  myDefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myPrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway2

  myPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPrivateRouteTable2
      SubnetId: !Ref myPrivateSubnet2

###############
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref myVPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID

  VPCPublicRouteTable:
    Description: Public Routing
    Value: !Ref myPublicRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-PUB-RT

  VPCPrivateRouteTable1:
    Description: Private Routing AZ1
    Value: !Ref myPrivateRouteTable1
    Export:
      Name: !Sub ${EnvironmentName}-PRIV1-RT

  VPCPrivateRouteTable2:
    Description: Private Routing AZ2
    Value: !Ref myPrivateRouteTable2
    Export:
      Name: !Sub ${EnvironmentName}-PRIV2-RT

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref myPublicSubnet1, !Ref myPublicSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-SUBNETS

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref myPrivateSubnet1, !Ref myPrivateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-SUBNETS

  PublicSubnet1:
    Description: A reference to the public subnet in 1st AZ
    Value: !Ref myPublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUB-SUBNET1

  PublicSubnet2:
    Description: A reference to the public subnet in 2nd AZ
    Value: !Ref myPublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PUB-SUBNET2

  PrivateSubnet1:
    Description: A reference to the private subnet in 1st AZ
    Value: !Ref myPrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-SUBNET1

  PrivateSubnet2:
    Description: A reference to the private subnet in 2nd AZ
    Value: !Ref myPrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-SUBNET2
